---
kind: pipeline
name: "Deploy"

platform:
  arch: arm64

trigger:
  event:
    - push
    - promote

environment:
  REGISTRY_GROUP: smashedr
  REGISTRY_HOST: registry.hosted-domains.com
  COMPOSE_FILE: docker-compose-swarm.yaml
  SERVICE_CONFIGS: git@github.com:hosted-domains/service-configs.git
  CONFIG_FILE: settings.env

steps:
  - name: "Variables"
    image: ubuntu
    commands:
      - echo DRONE_DEPLOY_TO $${DRONE_DEPLOY_TO}
      - export ENV_NAME=$(if [ "$DRONE_DEPLOY_TO" = prod ];then echo 'prod';else echo 'dev';fi)
      - echo ENV_NAME $${ENV_NAME}
      - echo "ENV_NAME=$${ENV_NAME}" >> ./.environment
      - export TRAEFIK_HOST=$(if [ "$DRONE_DEPLOY_TO" = prod ];then echo 'prod-test.cssnr.com';else echo 'dev-test.cssnr.com';fi)
      - echo TRAEFIK_HOST $${TRAEFIK_HOST}
      - echo "TRAEFIK_HOST=$${TRAEFIK_HOST}" >> ./.environment
      - echo "STACK_NAME=$${ENV_NAME}_$${DRONE_REPO_OWNER}_$${DRONE_REPO_NAME}" >> ./.environment

  - name: "Service Configs"
    image: alpine/git
    environment:
      SERVICE_CONFIGS_KEY:
        from_secret: SERVICE_CONFIGS_KEY
    commands:
      - set -a; . ./.environment
      - echo DRONE_DEPLOY_TO $${DRONE_DEPLOY_TO}
      - echo ENV_NAME $${ENV_NAME}
      - echo TRAEFIK_HOST $${TRAEFIK_HOST}
      - echo STACK_NAME $${STACK_NAME}
      - echo ----------
      - echo "$SERVICE_CONFIGS_KEY" > ./.ssh_key
      - chmod 0600 ./.ssh_key
      - mkdir service-configs
      - cd service-configs
      - git init
      - git config core.sshCommand "ssh -i ../.ssh_key -o IdentitiesOnly=yes -o StrictHostKeyChecking=no"
      - git remote add origin $${SERVICE_CONFIGS}
      - git config core.sparseCheckout true
      - echo "services/$DRONE_REPO_OWNER/$DRONE_REPO_NAME/$ENV_NAME/$CONFIG_FILE" >> .git/info/sparse-checkout
      - git pull origin master
      - echo  "CONFIG_FILE=service-configs/services/$DRONE_REPO_OWNER/$DRONE_REPO_NAME/$ENV_NAME/$CONFIG_FILE" >> ./.environment
      - echo ----------
      - cat "services/$DRONE_REPO_OWNER/$DRONE_REPO_NAME/$ENV_NAME/$CONFIG_FILE"

  - name: "Dev Deploy"
    image: ubuntu:latest
    when:
      branch:
        exclude:
          - master
    commands:
      - set -a; . ./.environment
      - echo DRONE_DEPLOY_TO $${DRONE_DEPLOY_TO}
      - echo ENV_NAME $${ENV_NAME}
      - echo TRAEFIK_HOST $${TRAEFIK_HOST}
      - echo STACK_NAME $${STACK_NAME}
      - echo CONFIG_FILE $${CONFIG_FILE}
      - echo ----------
      - echo DRONE_REPO $${DRONE_REPO}
      - echo DRONE_REPO_NAME $${DRONE_REPO_NAME}
      - echo DRONE_REPO_OWNER $${DRONE_REPO_OWNER}
      - echo DRONE_BRANCH $${DRONE_BRANCH}
      - echo DRONE_COMMIT_MESSAGE $${DRONE_COMMIT_MESSAGE}
      - echo DRONE_REPO_LINK $${DRONE_REPO_LINK}
      - echo ----------
      - ls -la
      - echo ----------
      - ls -lahR service-configs/services

#  - name: "Prod Deploy"
#    image: ubuntu:latest
#    when:
#      event:
#        - promote
#    commands:
#      - set -a; source .environment
